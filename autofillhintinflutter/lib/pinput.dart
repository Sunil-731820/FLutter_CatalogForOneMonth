import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:pinput/pinput.dart';

PinPut({
Key? key,
required int fieldsCount,
void Function(String)? onSubmit,
void Function(String?)? onSaved,
void Function(String)? onChanged,
void Function()? onTap,
void Function(String?)? onClipboardFound,
TextEditingController? controller,
FocusNode? focusNode,
Widget? preFilledWidget,
List<int> separatorPositions = const [],
Widget separator = const SizedBox(width: 15.0),
TextStyle? textStyle,
BoxDecoration? submittedFieldDecoration,
BoxDecoration? selectedFieldDecoration,
BoxDecoration? followingFieldDecoration,
BoxDecoration? disabledDecoration,
double? eachFieldWidth,
double? eachFieldHeight,
MainAxisAlignment fieldsAlignment = MainAxisAlignment.spaceBetween,
AlignmentGeometry eachFieldAlignment = Alignment.center,
EdgeInsetsGeometry? eachFieldMargin,
EdgeInsetsGeometry? eachFieldPadding,
BoxConstraints eachFieldConstraints = const BoxConstraints(minHeight: 40.0,
															minWidth: 40.0),
InputDecoration? inputDecoration,
Curve animationCurve = Curves.linear,
Duration animationDuration = const Duration(milliseconds: 160),
PinAnimationType pinAnimationType = PinAnimationType.slide,
Offset? slideTransitionBeginOffset,
bool enabled = true,
bool checkClipboard = false,
bool useNativeKeyboard = true,
bool autofocus = false,
AutovalidateMode autovalidateMode = AutovalidateMode.disabled,
bool withCursor = false,
Widget? cursor,
Brightness? keyboardAppearance,
List<TextInputFormatter>? inputFormatters,
String? Function(String?)? validator,
TextInputType keyboardType = TextInputType.number,
String? obscureText,
TextCapitalization textCapitalization = TextCapitalization.none,
TextInputAction? textInputAction,
ToolbarOptions? toolbarOptions = const ToolbarOptions(paste: true),
MainAxisSize mainAxisSize = MainAxisSize.max,
Iterable<String>? autofillHints,
bool enableIMEPersonalizedLearning = true,
String? initialValue,
SmartDashesType? smartDashesType,
SmartQuotesType? smartQuotesType,
bool enableSuggestions = true,
MaxLengthEnforcement? maxLengthEnforcement,
void Function()? onEditingComplete,
double cursorWidth = 2,
double? cursorHeight,
Radius? cursorRadius,
Color? cursorColor,
bool enableInteractiveSelection = true,
TextSelectionControls? selectionControls,
Widget? Function(BuildContext, {required int currentLength,
								required bool isFocused,
								required int? maxLength})? buildCounter,
String? restorationId
})
